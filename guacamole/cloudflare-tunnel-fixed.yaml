apiVersion: v1
kind: ConfigMap
metadata:
  name: cloudflare-tunnel-config
  namespace: guacamole
  labels:
    app.kubernetes.io/name: cloudflare-tunnel
    app.kubernetes.io/component: config
data:
  config.yaml: |
    tunnel: 9c0e65bf-b7fd-4e78-9803-39443ff4ce22
    credentials-file: /etc/cloudflared/creds/credentials.json
    
    ingress:
      - hostname: lab.tutorpro360.com
        service: http://tutorpro360-service.guacamole.svc.cluster.local:80
        originRequest:
          httpHostHeader: tutorpro360-service.guacamole.svc.cluster.local
          originServerName: tutorpro360-service.guacamole.svc.cluster.local
      - service: http_status:404
    
    warp-routing:
      enabled: true
    
    metrics: 0.0.0.0:2000
    no-autoupdate: true

  credentials.json: |
    {
      "AccountTag": "30e379891359a26845dee4b4a7d0bbb",
      "TunnelSecret": "Y2E3MWY5M2ItOTk5YS00YWEyLWEzNGEtNDMwOTY0NThmOGU3",
      "TunnelID": "9c0e65bf-b7fd-4e78-9803-39443ff4ce22"
    }

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cloudflare-tunnel-fixed
  namespace: guacamole
  labels:
    app.kubernetes.io/name: cloudflare-tunnel
    app.kubernetes.io/instance: cloudflare-tunnel-fixed
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/component: tunnel
    app.kubernetes.io/part-of: tutorpro360-stack
spec:
  replicas: 10
  selector:
    matchLabels:
      app.kubernetes.io/name: cloudflare-tunnel
      app.kubernetes.io/instance: cloudflare-tunnel-fixed
  template:
    metadata:
      labels:
        app.kubernetes.io/name: cloudflare-tunnel
        app.kubernetes.io/instance: cloudflare-tunnel-fixed
        app.kubernetes.io/version: "latest"
        app.kubernetes.io/component: tunnel
        app.kubernetes.io/part-of: tutorpro360-stack
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "2000"
        prometheus.io/path: "/metrics"
    spec:
      securityContext:
        runAsUser: 65532
        runAsGroup: 65532
        runAsNonRoot: true
        fsGroup: 65532
      containers:
      - name: cloudflare-tunnel
        image: cloudflare/cloudflared:latest
        imagePullPolicy: Always
        command:
        - cloudflared
        - tunnel
        - --config
        - /etc/cloudflared/config/config.yaml
        - run
        env:
        - name: TUNNEL_METRICS
          value: "0.0.0.0:2000"
        - name: TUNNEL_LOGFILE
          value: "/dev/stdout"
        - name: TUNNEL_LOGLEVEL
          value: "info"
        - name: TUNNEL_TRANSPORT_PROTOCOL
          value: "quic"
        - name: TUNNEL_NO_AUTOUPDATE
          value: "true"
        ports:
        - containerPort: 2000
          name: metrics
          protocol: TCP
        volumeMounts:
        - name: config
          mountPath: /etc/cloudflared/config
          readOnly: true
        - name: creds
          mountPath: /etc/cloudflared/creds
          readOnly: true
        livenessProbe:
          httpGet:
            path: /ready
            port: 2000
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: 2000
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /ready
            port: 2000
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 5
          failureThreshold: 30
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "200m"
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65532
          runAsGroup: 65532
          capabilities:
            drop:
            - ALL
      volumes:
      - name: config
        configMap:
          name: cloudflare-tunnel-config
          items:
          - key: config.yaml
            path: config.yaml
      - name: creds
        configMap:
          name: cloudflare-tunnel-config
          items:
          - key: credentials.json
            path: credentials.json
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - cloudflare-tunnel
              topologyKey: kubernetes.io/hostname

---
apiVersion: v1
kind: Service
metadata:
  name: cloudflare-tunnel-fixed-metrics
  namespace: guacamole
  labels:
    app.kubernetes.io/name: cloudflare-tunnel
    app.kubernetes.io/instance: cloudflare-tunnel-fixed
    app.kubernetes.io/component: metrics
spec:
  type: ClusterIP
  ports:
  - port: 2000
    targetPort: 2000
    protocol: TCP
    name: metrics
  selector:
    app.kubernetes.io/name: cloudflare-tunnel
    app.kubernetes.io/instance: cloudflare-tunnel-fixed
