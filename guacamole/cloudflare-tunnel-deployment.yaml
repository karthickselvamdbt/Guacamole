apiVersion: apps/v1
kind: Deployment
metadata:
  name: cloudflare-tunnel
  namespace: guacamole
  labels:
    app.kubernetes.io/name: cloudflare-tunnel
    app.kubernetes.io/instance: cloudflare-tunnel
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/component: tunnel
    app.kubernetes.io/part-of: tutorpro360-stack
spec:
  replicas: 5
  selector:
    matchLabels:
      app.kubernetes.io/name: cloudflare-tunnel
      app.kubernetes.io/instance: cloudflare-tunnel
  template:
    metadata:
      labels:
        app.kubernetes.io/name: cloudflare-tunnel
        app.kubernetes.io/instance: cloudflare-tunnel
        app.kubernetes.io/version: "latest"
        app.kubernetes.io/component: tunnel
        app.kubernetes.io/part-of: tutorpro360-stack
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "2000"
        prometheus.io/path: "/metrics"
    spec:
      securityContext:
        runAsUser: 65532
        runAsGroup: 65532
        runAsNonRoot: true
        fsGroup: 65532
        seccompProfile:
          type: RuntimeDefault
      containers:
      - name: cloudflare-tunnel
        image: cloudflare/cloudflared:latest
        imagePullPolicy: Always
        command:
        - cloudflared
        - tunnel
        - --no-autoupdate
        - run
        - --token
        - $(TUNNEL_TOKEN)
        env:
        - name: TUNNEL_TOKEN
          valueFrom:
            secretKeyRef:
              name: cloudflare-tunnel-token
              key: tunnel-token
        - name: TUNNEL_METRICS
          value: "0.0.0.0:2000"
        - name: TUNNEL_LOGFILE
          value: "/dev/stdout"
        - name: TUNNEL_LOGLEVEL
          value: "info"
        - name: TUNNEL_TRANSPORT_PROTOCOL
          value: "quic"
        - name: TUNNEL_NO_AUTOUPDATE
          value: "true"
        ports:
        - containerPort: 2000
          name: metrics
          protocol: TCP
        livenessProbe:
          httpGet:
            path: /ready
            port: 2000
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: 2000
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /ready
            port: 2000
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 5
          failureThreshold: 30
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "200m"
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65532
          runAsGroup: 65532
          capabilities:
            drop:
            - ALL
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - cloudflare-tunnel
              topologyKey: kubernetes.io/hostname
      tolerations:
      - key: node.kubernetes.io/not-ready
        operator: Exists
        effect: NoExecute
        tolerationSeconds: 300
      - key: node.kubernetes.io/unreachable
        operator: Exists
        effect: NoExecute
        tolerationSeconds: 300

---
apiVersion: v1
kind: Service
metadata:
  name: cloudflare-tunnel-metrics
  namespace: guacamole
  labels:
    app.kubernetes.io/name: cloudflare-tunnel
    app.kubernetes.io/instance: cloudflare-tunnel
    app.kubernetes.io/component: metrics
spec:
  type: ClusterIP
  ports:
  - port: 2000
    targetPort: 2000
    protocol: TCP
    name: metrics
  selector:
    app.kubernetes.io/name: cloudflare-tunnel
    app.kubernetes.io/instance: cloudflare-tunnel

---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: cloudflare-tunnel-pdb
  namespace: guacamole
  labels:
    app.kubernetes.io/name: cloudflare-tunnel
    app.kubernetes.io/instance: cloudflare-tunnel
spec:
  minAvailable: 3
  selector:
    matchLabels:
      app.kubernetes.io/name: cloudflare-tunnel
      app.kubernetes.io/instance: cloudflare-tunnel

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: cloudflare-tunnel-hpa
  namespace: guacamole
  labels:
    app.kubernetes.io/name: cloudflare-tunnel
    app.kubernetes.io/instance: cloudflare-tunnel
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: cloudflare-tunnel
  minReplicas: 5
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 10
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
